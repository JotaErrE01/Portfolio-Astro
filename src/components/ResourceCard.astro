---
type Props = {
  title: string;
  image: string;
  categories: string[];
  description: string;
  slug: string;
};
const randomColor = () => {
  const colors = [
    "bg-red-500",
    "bg-yellow-500",
    "bg-green-500",
    "bg-orange-500",
    "bg-indigo-500",
    "bg-purple-500",
    "bg-pink-500",
    "bg-rose-500",
    "bg-emerald-500",
    "bg-cyan-500",
  ];
  const randomIndex = Math.floor(Math.random() * colors.length);
  return colors[randomIndex];
};

const { title, image, categories, description, slug } = Astro.props;
---

<div
  class="flex rounded-md overflow-hidden mb-5 bg-gray-200 dark:bg-slate-800 group cursor-pointer max-h-96 flex-col md:flex-row md:max-h-40 md:h-36"
>
  <figure
    class="p-2 w-full h-40 md:h-auto md:w-1/3 md:p-0 md:min-w-[12rem] overflow-hidden"
  >
    <img
      src={image}
      alt={title}
      class="rounded h-full w-full object-cover md:object-cover md:h-full md:w-full md:rounded-l md:rounded-r-none"
      loading="lazy"
    />
  </figure>

  <a href={`/resources/${slug}`} class="p-2 md:p-4 md:w-[90%]">
    <h3
      class="text-xl dark:text-white font-bold mb-2 items-center mr-3 flex gap-4 md:flex-row flex-col"
    >
      <span
        class="group-hover:text-primary-focus dark:group-hover:text-accent-focus transition-colors"
        >{title}
      </span>
      <ul class="list-none flex">
        {
          categories.map((category) => (
            <li
              class={`text-xs ${randomColor()} text-white rounded-md px-2 py-1 mr-2`}
            >
              {category}
            </li>
          ))
        }
      </ul>
    </h3>
    <p class="p-2 md:p-0 md:mb-0 mb-4">
      {description}
    </p>
  </a>
</div>
